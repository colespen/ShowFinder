{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/Dev/ShowFinder/src/components/Map.jsx\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet';\nimport L from \"leaflet\";\nimport useGeoLocation from '../hooks/useGeoLocation';\nimport testShows from '../data/test-show-rapid.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"testShows\", testShows);\nexport default function Map(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  // const [shows, setShows] = useState({});\n  const [newShows, setNewShows] = useState({});\n  const [currCity, setCurrCity] = useState(null);\n  const geolocation = useGeoLocation();\n  console.log(\"geolocation ~~~~~~~~~~~~; \", geolocation);\n  const hqToken = 'MIUlzyESU3Uvf_ZUQxzFzM0C3vae40bPOYJSMPsN';\n  const iqToken = 'pk.32218541d692e0df20b0912ebadf68bf';\n  const currDate = new Date();\n  const date = `${currDate.getFullYear()}-${currDate.getMonth() + 1}-${currDate.getDate()}`;\n  const lat = geolocation.coords.lat;\n  const lng = geolocation.coords.lng;\n  const egypt = [31.403292642948028, 30.853644619611597];\n  function CurrentLocation() {\n    _s();\n    const map = useMap();\n    useEffect(() => {\n      if (geolocation.loaded) map.flyTo(geolocation.coords, 12);\n      //use setView() if page refresh\n      // map.setView(geolocation.coords, map.getZoom());\n      map.on('zoomend', () => {\n        // load position marker after animation\n        const radius = geolocation.accuracy;\n        const circle = L.circle(geolocation.coords, radius);\n        circle.addTo(map);\n      });\n    }, [map]);\n    return null;\n  }\n\n  // fetch city name using coords\n  _s(CurrentLocation, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n    return [useMap];\n  });\n  useEffect(() => {\n    const xhr = new XMLHttpRequest();\n    if (geolocation.loaded) {\n      xhr.open('GET', `https://us1.locationiq.com/v1/reverse.php?key=${iqToken}&lat=` + lat + \"&lon=\" + lng + \"&format=json\", true);\n      xhr.send();\n      xhr.onreadystatechange = processRequest;\n      xhr.addEventListener(\"readystatechange\", processRequest, false);\n    }\n    function processRequest(e) {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        const response = JSON.parse(xhr.responseText);\n        const city = response.address.city;\n        setCurrCity(city);\n      }\n    }\n  }, [lat, lng, geolocation.loaded]);\n\n  // fetch show data with params\n  // useEffect(() => {\n  //   const options = {\n  //     method: 'GET',\n  //     baseURL: 'https://api.predicthq.com/v1/events/',\n  //     params: {\n  //       'relevance': 'start_around,location_around',\n  //       'start_around.origin': date,\n  //       'location_around.origin': lat + \",\" + lng,\n  //       'location_around.offset': '1km',\n  //       // 'location_around.scale': '5km',\n  //       'active.gte': date,\n  //       'category': 'concerts'\n  //     },\n  //     headers: {\n  //       authorization: `Bearer ${hqToken}`\n  //     }\n  //   };\n  //   if (geolocation.loaded) axios.request(options)\n  //     .then(res => {\n  //       setShows(res.data);\n  //       console.log(\"res.data~~~~~~~~~: \", res.data);\n  //     })\n  //     .catch(err => {\n  //       console.error(err.message);\n  //     });\n  // }, [geolocation, date, lat, lng]);\n\n  // results OR empty array seems wrong but need to not map on undefined axios get\n  // const showMarkers = (shows.results || []).map(show => (\n  //   show.entities.map(venue => (\n\n  //     <Marker\n  //       key={show.id}\n  //       position={[show.location[1], show.location[0]]}>\n  //       <Popup key={venue.entity_id}>\n  //         {show.title} <br /> {venue.name}\n  //       </Popup>\n  //     </Marker>\n  //   ))\n  // ));\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      baseURL: 'https://concerts-artists-events-tracker.p.rapidapi.com/location',\n      params: {\n        'name': 'Vancouver',\n        'minDate': date,\n        'maxDate': date\n      },\n      headers: {\n        'X-RapidAPI-Key': 'daf9809102msh05c5b9a3abacab6p1573f0jsnbdb721a8ca04',\n        'X-RapidAPI-Host': 'concerts-artists-events-tracker.p.rapidapi.com'\n      }\n    };\n    if (geolocation.loaded) axios.request(options).then(res => {\n      setNewShows(res.data);\n      console.log(\"res.data~~~~~~~~~: \", res.data);\n    }).catch(err => {\n      console.error(err.message);\n    });\n  }, [geolocation, date]);\n  const newShowMarkers = (newShows.data || []).map((show, index) => show.performer.map((artist, i) => /*#__PURE__*/_jsxDEV(Marker, {\n    position: [show.location.geo.latitude, show.location.geo.longitude],\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: [show.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }, this), \" \", show.location.name]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 7\n  }, this)));\n  console.log(\"newShows~~~~~~~~~: \", newShows);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", currCity ? \"Shows in \" + currCity : \"grabbing your location...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: egypt,\n      zoom: 2,\n      scrollWheelZoom: true,\n      children: [newShowMarkers, /*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrentLocation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s2(Map, \"OOMM5KvBDBii8ntTeNHQUG8hIIg=\", false, function () {\n  return [useGeoLocation];\n});\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useState","useEffect","axios","MapContainer","TileLayer","useMap","Marker","Popup","L","useGeoLocation","testShows","console","log","Map","props","newShows","setNewShows","currCity","setCurrCity","geolocation","hqToken","iqToken","currDate","Date","date","getFullYear","getMonth","getDate","lat","coords","lng","egypt","CurrentLocation","map","loaded","flyTo","on","radius","accuracy","circle","addTo","xhr","XMLHttpRequest","open","send","onreadystatechange","processRequest","addEventListener","e","readyState","status","response","JSON","parse","responseText","city","address","options","method","baseURL","params","headers","request","then","res","data","catch","err","error","message","newShowMarkers","show","index","performer","artist","i","location","geo","latitude","longitude","name"],"sources":["/Users/macbookpro/Documents/Dev/ShowFinder/src/components/Map.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet';\nimport L from \"leaflet\";\nimport useGeoLocation from '../hooks/useGeoLocation';\n\nimport testShows from '../data/test-show-rapid.json';\n\nconsole.log(\"testShows\", testShows)\n\nexport default function Map(props) {\n  // const [shows, setShows] = useState({});\n  const [newShows, setNewShows] = useState({});\n  const [currCity, setCurrCity] = useState(null);\n  const geolocation = useGeoLocation();\n  console.log(\"geolocation ~~~~~~~~~~~~; \", geolocation);\n\n  const hqToken = 'MIUlzyESU3Uvf_ZUQxzFzM0C3vae40bPOYJSMPsN';\n  const iqToken = 'pk.32218541d692e0df20b0912ebadf68bf';\n\n  const currDate = new Date();\n  const date = `${currDate.getFullYear()}-${currDate.getMonth() + 1}-${currDate.getDate()}`;\n\n  const lat = geolocation.coords.lat;\n  const lng = geolocation.coords.lng;\n\n  const egypt =\n    [31.403292642948028, 30.853644619611597];\n\n\n  function CurrentLocation() {\n    const map = useMap();\n    useEffect(() => {\n      if (geolocation.loaded) map.flyTo(geolocation.coords, 12);\n      //use setView() if page refresh\n      // map.setView(geolocation.coords, map.getZoom());\n      map.on('zoomend', () => {\n        // load position marker after animation\n        const radius = geolocation.accuracy;\n        const circle = L.circle(geolocation.coords, radius);\n        circle.addTo(map);\n      })\n    }, [map]);\n    return null;\n  }\n  \n  // fetch city name using coords\n  useEffect(() => {\n    const xhr = new XMLHttpRequest();\n    if (geolocation.loaded) {\n      xhr.open('GET',\n        `https://us1.locationiq.com/v1/reverse.php?key=${iqToken}&lat=`\n        + lat + \"&lon=\" + lng + \"&format=json\", true);\n      xhr.send();\n      xhr.onreadystatechange = processRequest;\n      xhr.addEventListener(\"readystatechange\", processRequest, false);\n    }\n    function processRequest(e) {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        const response = JSON.parse(xhr.responseText);\n        const city = response.address.city;\n        setCurrCity(city);\n      }\n    }\n  }, [lat, lng, geolocation.loaded]);\n\n  // fetch show data with params\n  // useEffect(() => {\n  //   const options = {\n  //     method: 'GET',\n  //     baseURL: 'https://api.predicthq.com/v1/events/',\n  //     params: {\n  //       'relevance': 'start_around,location_around',\n  //       'start_around.origin': date,\n  //       'location_around.origin': lat + \",\" + lng,\n  //       'location_around.offset': '1km',\n  //       // 'location_around.scale': '5km',\n  //       'active.gte': date,\n  //       'category': 'concerts'\n  //     },\n  //     headers: {\n  //       authorization: `Bearer ${hqToken}`\n  //     }\n  //   };\n  //   if (geolocation.loaded) axios.request(options)\n  //     .then(res => {\n  //       setShows(res.data);\n  //       console.log(\"res.data~~~~~~~~~: \", res.data);\n  //     })\n  //     .catch(err => {\n  //       console.error(err.message);\n  //     });\n  // }, [geolocation, date, lat, lng]);\n\n  // results OR empty array seems wrong but need to not map on undefined axios get\n  // const showMarkers = (shows.results || []).map(show => (\n  //   show.entities.map(venue => (\n\n  //     <Marker\n  //       key={show.id}\n  //       position={[show.location[1], show.location[0]]}>\n  //       <Popup key={venue.entity_id}>\n  //         {show.title} <br /> {venue.name}\n  //       </Popup>\n  //     </Marker>\n  //   ))\n  // ));\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      baseURL: 'https://concerts-artists-events-tracker.p.rapidapi.com/location',\n      params: {\n        'name': 'Vancouver',\n        'minDate': date,\n        'maxDate': date\n      },\n      headers: {\n        'X-RapidAPI-Key': 'daf9809102msh05c5b9a3abacab6p1573f0jsnbdb721a8ca04',\n        'X-RapidAPI-Host': 'concerts-artists-events-tracker.p.rapidapi.com'\n      }\n    };\n    if (geolocation.loaded) axios.request(options)\n      .then(res => {\n        setNewShows(res.data);\n        console.log(\"res.data~~~~~~~~~: \", res.data);\n      })\n      .catch(err => {\n        console.error(err.message);\n      });\n  }, [geolocation, date]);\n\n  const newShowMarkers = (newShows.data || []).map((show, index) => (\n    show.performer.map((artist, i) => (\n      \n      <Marker\n      key={index}\n      position={[show.location.geo.latitude, show.location.geo.longitude]}>\n        <Popup key={index}>\n          {show.name} <br /> {show.location.name}\n        </Popup>\n      </Marker>\n    ))\n  ));\n\n  console.log(\"newShows~~~~~~~~~: \", newShows);\n\n  return (\n    <div>\n      <h1> {currCity ? \"Shows in \" +\n        currCity : \"grabbing your location...\"}\n      </h1>\n\n      <MapContainer\n        center={egypt}\n        zoom={2} scrollWheelZoom={true} \n      >\n        {newShowMarkers}\n\n        <TileLayer\n          attribution=\n          '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <CurrentLocation />\n      </MapContainer>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}