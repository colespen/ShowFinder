[{"/Users/macbookpro/Documents/Dev/ShowFinder/src/index.js":"1","/Users/macbookpro/Documents/Dev/ShowFinder/src/reportWebVitals.js":"2","/Users/macbookpro/Documents/Dev/ShowFinder/src/App.jsx":"3","/Users/macbookpro/Documents/Dev/ShowFinder/src/components/Map.jsx":"4","/Users/macbookpro/Documents/Dev/ShowFinder/src/hooks/useGeoLocation.jsx":"5"},{"size":535,"mtime":1670892713472,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1670892713473,"results":"8","hashOfConfig":"7"},{"size":197,"mtime":1671244128445,"results":"9","hashOfConfig":"7"},{"size":5408,"mtime":1671244531402,"results":"10","hashOfConfig":"7"},{"size":778,"mtime":1670892713472,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1rydz54",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"/Users/macbookpro/Documents/Dev/ShowFinder/src/index.js",[],[],[],"/Users/macbookpro/Documents/Dev/ShowFinder/src/reportWebVitals.js",[],[],"/Users/macbookpro/Documents/Dev/ShowFinder/src/App.jsx",[],[],"/Users/macbookpro/Documents/Dev/ShowFinder/src/components/Map.jsx",["29","30","31","32"],[],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet';\nimport L from \"leaflet\";\nimport useGeoLocation from '../hooks/useGeoLocation';\n\nimport './map.scss'\nimport testShows from '../data/test-show-rapid.json';\n\nexport default function Map(props) {\n  // const [shows, setShows] = useState({});\n  // const [newShows, setNewShows] = useState({});\n  const [currCity, setCurrCity] = useState(null);\n  const geolocation = useGeoLocation();\n  console.log(\"geolocation ~~~~~~~~~~~~; \", geolocation);\n\n  const hqToken = 'MIUlzyESU3Uvf_ZUQxzFzM0C3vae40bPOYJSMPsN';\n  const iqToken = 'pk.32218541d692e0df20b0912ebadf68bf';\n\n  const currDate = new Date();\n  const date = `${currDate.getFullYear()}-${currDate.getMonth() + 1}-${currDate.getDate()}`;\n\n  const lat = geolocation.coords.lat;\n  const lng = geolocation.coords.lng;\n\n  const egypt =\n    [31.403292642948028, 30.853644619611597];\n\n\n  function CurrentLocation() {\n    const map = useMap();\n    useEffect(() => {\n      if (geolocation.loaded) map.flyTo(geolocation.coords, 12);\n      //use setView instead of flyTo on page refresh\n      // map.setView(geolocation.coords, map.getZoom());\n      map.on('zoomend', () => {\n        // load position marker after animation\n        const radius = geolocation.accuracy;\n        const circle = L.circle(geolocation.coords, radius);\n        circle.addTo(map);\n      })\n    }, [map]);\n    return null;\n  }\n\n  // fetch city name using coords\n  useEffect(() => {\n    const xhr = new XMLHttpRequest();\n    if (geolocation.loaded) {\n      xhr.open('GET',\n        `https://us1.locationiq.com/v1/reverse.php?key=${iqToken}&lat=`\n        + lat + \"&lon=\" + lng + \"&format=json\", true);\n      xhr.send();\n      xhr.onreadystatechange = processRequest;\n      xhr.addEventListener(\"readystatechange\", processRequest, false);\n    }\n    function processRequest(e) {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        const response = JSON.parse(xhr.responseText);\n        const city = response.address.city;\n        setCurrCity(city);\n      }\n    }\n  }, [lat, lng, geolocation.loaded]);\n\n  // fetch show data with params\n  // useEffect(() => {\n  //   const options = {\n  //     method: 'GET',\n  //     baseURL: 'https://api.predicthq.com/v1/events/',\n  //     params: {\n  //       'relevance': 'start_around,location_around',\n  //       'start_around.origin': date,\n  //       'location_around.origin': lat + \",\" + lng,\n  //       'location_around.offset': '1km',\n  //       // 'location_around.scale': '5km',\n  //       'active.gte': date,\n  //       'category': 'concerts'\n  //     },\n  //     headers: {\n  //       authorization: `Bearer ${hqToken}`\n  //     }\n  //   };\n  //   if (geolocation.loaded) axios.request(options)\n  //     .then(res => {\n  //       setShows(res.data);\n  //       console.log(\"res.data~~~~~~~~~: \", res.data);\n  //     })\n  //     .catch(err => {\n  //       console.error(err.message);\n  //     });\n  // }, [geolocation, date, lat, lng]);\n\n  // results OR empty array seems wrong but need to not map on undefined axios get\n  // const showMarkers = (shows.results || []).map(show => (\n  //   show.entities.map(venue => (\n\n  //     <Marker\n  //       key={show.id}\n  //       position={[show.location[1], show.location[0]]}>\n  //       <Popup key={venue.entity_id}>\n  //         {show.title} <br /> {venue.name}\n  //       </Popup>\n  //     </Marker>\n  //   ))\n  // ));\n\n  // useEffect(() => {\n  //   const options = {\n  //     method: 'GET',\n  //     baseURL: 'https://concerts-artists-events-tracker.p.rapidapi.com/location',\n  //     params: {\n  //       'name': currCity,\n  //       'minDate': date,\n  //       'maxDate': date\n  //     },\n  //     headers: {\n  //       'X-RapidAPI-Key': 'daf9809102msh05c5b9a3abacab6p1573f0jsnbdb721a8ca04',\n  //       'X-RapidAPI-Host': 'concerts-artists-events-tracker.p.rapidapi.com'\n  //     }\n  //   };\n  //   if (geolocation.loaded) axios.request(options)\n  //     .then(res => {\n  //       setNewShows(res.data);\n  //       console.log(\"res.data~~~~~~~~~: \", res.data);\n  //     })\n  //     .catch(err => {\n  //       console.error(err.message);\n  //     });\n  // }, [geolocation, date, currCity]);\n\n\n  const newShowMarkers = (testShows.data || []).map((show, index) => (\n\n    <Marker\n      key={show.description}\n      position={[show.location.geo.latitude, show.location.geo.longitude]}>\n      <Popup key={index}>\n\n        {show.performer.map((artist, i) =>\n        (\n          <ul className=\"artist-list\">\n            <li>{artist.name}</li>\n          </ul>\n        ))}\n\n        <a href={show.location.sameAs}\n          target=\"_blank\">\n          {show.location.name}</a>\n      </Popup>\n    </Marker>\n  ));\n\n\n  console.log(\"testShows~~~~~~~~~: \", testShows);\n\n  return (\n    <div className=\"map-main\">\n      <h1> {currCity ? \"Shows in \" +\n        currCity : \"grabbing your location...\"}\n      </h1>\n\n      <MapContainer className=\"map-container\"\n        center={egypt}\n        zoom={2} scrollWheelZoom={true}\n      >\n        {geolocation.loaded && newShowMarkers}\n\n        <TileLayer\n          attribution=\n          '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <CurrentLocation />\n      </MapContainer>\n    </div>\n  );\n}","/Users/macbookpro/Documents/Dev/ShowFinder/src/hooks/useGeoLocation.jsx",[],[],{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":13},{"ruleId":"33","severity":1,"message":"37","line":17,"column":9,"nodeType":"35","messageId":"36","endLine":17,"endColumn":16},{"ruleId":"33","severity":1,"message":"38","line":21,"column":9,"nodeType":"35","messageId":"36","endLine":21,"endColumn":13},{"ruleId":"39","severity":1,"message":"40","line":147,"column":9,"nodeType":"41","messageId":"42","endLine":148,"endColumn":27,"fix":"43"},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'hqToken' is assigned a value but never used.","'date' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"44","text":"45"},[4691,4691]," rel=\"noreferrer\""]